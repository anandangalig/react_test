Set-Up:

1) Webpack -  REACT favored module loader ( e.g. require.js and Browserify). Takes separated JS files that handle specific tasks (modules), then compress/minify to run in the browser.
  * npm install -g webpack; npm install -S webpack;

  * touch webpack.config.js (source: https://github.com/learncodeacademy/react-js-tutorials/tree/master/1-basic-react) - where    you designate the I/O files; run webpack!

  * now the app can npm install any number of tools(#jQuery, lodash,...), require it in the desired module, then webpack it into a nice coherent app that is low-weight.

  * RUN: webpack --> to compress the js files into client.min.js

  * RUN: npm run dev (webpack-dev-server --content-base src --inline --hot) ========>watches the JS files and auto-reloads the page

2) Babel - transpiles our JSX (react) code and ES6 into all browser friendly JS.

3) React and ReactDOM: uses Diff (virtual DOM vs actual DOM) to figure out the changed pieces and render that sliver only => FAST!
  * React.createClass() === class XYZ extends React.Component
  * Components render separate pieces and get exported/imported accordingly
  * this.state
    --> scoped to the current component ONLY!!!
    --> this.state === null by default;
    --> this.state gets updated automatically with changes
    --> to create one:
          constructor() {
            super();
            this.state = {name: "Anand"};
          }
    --> to change the state later:
          this.setState({name : "Tuya"});

  * this.props:
    --> the way React passes data (turned into an object) to other components.
    --> From the Parent component's render():
          const name = "Anand";
          return ( <Header my_name={name} />); (or a string can be used <Header title={"Anand"} />)

    --> And now any child component who received the my_name, has access to this.props.name! (within render, but before return!)
    --> Can pass Data down to Child components and Actions up to the parent: make sure the objects being passed up matches with at parameters it is being used for. 
